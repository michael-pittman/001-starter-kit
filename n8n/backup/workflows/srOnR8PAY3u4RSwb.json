{
  "name": "HNIC Orchestrator",
  "nodes": [
    {
      "id": "note",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-400,-280],
      "parameters": {
        "width": 520,
        "height": 180,
        "content": "### Entry point\nReceives `{chatInput, sessionId}` → AI agent routes to\n• plan_tasks  (first prompt)\n• assign_task (per task)\n• next_task   (on command)\nStreams responses via Chat Trigger."
      }
    },
    {
      "id": "trigger_chat",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [-180,-180],
      "webhookId": "hnic_webhook",
      "parameters": {}
    },
    {
      "id": "llm",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [80,-260],
      "parameters": {
        "model": { "__rl": true, "mode": "list", "value": "gpt-4o" }
      },
      "credentials": {
        "openAiApi": { "id": "OPENAI_MAIN", "name": "OpenAI" }
      }
    },
    {
      "id": "mem",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [80,-100],
      "parameters": {
        "sessionKey": "= {{$json.sessionId || $executionId}}",
        "tableName": "chat_memory",
        "contextWindow": 10
      },
      "credentials": {
        "postgres": { "id": "PG", "name": "Postgres" }
      }
    },
    {
      "id": "agent",
      "name": "AI Agent – Tools Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTools",
      "typeVersion": 1,
      "position": [320,-180],
      "parameters": {
        "options": {
          "systemMessage": "=You are **H N I C** – session orchestrator.\nIf no open tasks exist, call plan_tasks(prompt,sessionId).\nWhen deps met call assign_task(task_id,sessionId).\nCommands: tasks list | next | done <id>.\nStream status.",
          "maxIterations": 8
        }
      }
    },
    {
      "id": "tool_plan",
      "name": "plan_tasks",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [600,-300],
      "parameters": {
        "name": "plan_tasks",
        "workflowId": { "__rl": true, "mode": "list", "value": "Plan Tasks (sub)" },
        "description": "Break prompt into atomic tasks",
        "source": "defineBelow",
        "workflowInputs": {
          "values": [
            { "name": "prompt",    "value": "={{ $json.chatInput }}" },
            { "name": "sessionId", "value": "={{ $json.sessionId }}" }
          ]
        }
      }
    },
    {
      "id": "tool_assign",
      "name": "assign_task",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [600,-200],
      "parameters": {
        "name": "assign_task",
        "workflowId": { "__rl": true, "mode": "list", "value": "Assign Task (sub)" },
        "description": "Dispatch task to remote agent",
        "source": "database"
      }
    },
    {
      "id": "tool_next",
      "name": "next_task",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [600,-100],
      "parameters": {
        "name": "next_task",
        "workflowId": { "__rl": true, "mode": "list", "value": "Next Task (sub)" },
        "description": "Return next actionable task",
        "source": "database"
      }
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [[{ "node": "AI Agent – Tools Agent","type": "main","index": 0 }]]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [[{ "node": "AI Agent – Tools Agent","type": "ai_languageModel","index": 0 }]]
    },
    "Postgres Chat Memory": {
      "ai_memory": [[{ "node": "AI Agent – Tools Agent","type": "ai_memory","index": 0 }]]
    },
    "plan_tasks": {
      "ai_tool": [[{ "node": "AI Agent – Tools Agent","type": "ai_tool","index": 0 }]]
    },
    "assign_task": {
      "ai_tool": [[{ "node": "AI Agent – Tools Agent","type": "ai_tool","index": 1 }]]
    },
    "next_task": {
      "ai_tool": [[{ "node": "AI Agent – Tools Agent","type": "ai_tool","index": 2 }]]
    }
  },
  "pinData": {},
  "settings": { "executionOrder": "v1" }
}