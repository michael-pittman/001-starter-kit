{
  "name": "HNIC Orchestrator",
  "nodes": [
    {
      "id": "d1b43616-e1fc-4d06-8839-0d8fd8dbd3b2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-400, -280],
      "parameters": {
        "width": 520,
        "height": 180,
        "content": "### Entry point\nReceives `{chatInput, sessionId}` → AI agent routes to\n• plan_tasks  (first prompt)\n• assign_task (per task)\n• next_task   (on command)\nStreams responses via Chat Trigger."
      }
    },
    {
      "id": "0c221d0e-2b32-4930-9f0a-50d1feaa1047",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [-180, -180],
      "webhookId": "hnic_webhook",
      "parameters": {}
    },
    {
      "id": "90f2b219-4d8b-44fc-8af8-1299bc2f3f16",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [80, -260],
      "parameters": {
        "model": { "__rl": true, "mode": "list", "value": "gpt-4o" }
      },
      "credentials": {
        "openAiApi": { "id": "OPENAI_MAIN", "name": "OpenAI" }
      }
    },
    {
      "id": "f6fdadf4-a558-4abe-a7a1-8e302f9f850b",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "position": [80, -100],
      "parameters": {
        "sessionKey": "= {{$json.sessionId || $executionId}}",
        "tableName": "chat_memory",
        "contextWindow": 10
      },
      "credentials": {
        "postgres": { "id": "PG", "name": "Postgres" }
      }
    },
    {
      "id": "6f6f67c4-a47b-4e9f-a69e-e8f7f4b1a2aa",
      "name": "AI Agent – Tools Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTools",
      "position": [320, -180],
      "parameters": {
        "options": {
          "systemMessage": "=You are **H N I C** – session orchestrator.\nIf no open tasks exist, call plan_tasks(prompt,sessionId).\nWhen deps are met call assign_task(task_id,sessionId).\nCommands: tasks list | next | done <id>.\nStream status.",
          "maxIterations": 8
        }
      }
    },
    {
      "id": "196dca0f-0e12-4e77-9e33-c88f70a1bb12",
      "name": "plan_tasks",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [600, -300],
      "parameters": {
        "name": "plan_tasks",
        "workflowId": { "__rl": true, "mode": "list", "value": "Plan Tasks (sub)" },
        "description": "Break prompt into atomic tasks",
        "source": "defineBelow",
        "workflowInputs": {
          "values": [
            { "name": "prompt",    "value": "={{ $json.chatInput }}" },
            { "name": "sessionId", "value": "={{ $json.sessionId }}" }
          ]
        }
      }
    },
    {
      "id": "6d88fd7e-d46d-46d6-8c2f-8d077b3ca774",
      "name": "assign_task",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [600, -200],
      "parameters": {
        "name": "assign_task",
        "workflowId": { "__rl": true, "mode": "list", "value": "Assign Task (sub)" },
        "description": "Dispatch task to remote agent",
        "source": "database"
      }
    },
    {
      "id": "43dd4c7e-3e4e-4d5f-bb7a-bdbbb301b56f",
      "name": "next_task",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [600, -100],
      "parameters": {
        "name": "next_task",
        "workflowId": { "__rl": true, "mode": "list", "value": "Next Task (sub)" },
        "description": "Return next actionable task",
        "source": "database"
      }
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [[{ "node": "AI Agent – Tools Agent", "type": "main", "index": 0 }]]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [[{ "node": "AI Agent – Tools Agent", "type": "ai_languageModel", "index": 0 }]]
    },
    "Postgres Chat Memory": {
      "ai_memory": [[{ "node": "AI Agent – Tools Agent", "type": "ai_memory", "index": 0 }]]
    },
    "plan_tasks": {
      "ai_tool": [[{ "node": "AI Agent – Tools Agent", "type": "ai_tool", "index": 0 }]]
    },
    "assign_task": {
      "ai_tool": [[{ "node": "AI Agent – Tools Agent", "type": "ai_tool", "index": 1 }]]
    },
    "next_task": {
      "ai_tool": [[{ "node": "AI Agent – Tools Agent", "type": "ai_tool", "index": 2 }]]
    }
  },
  "pinData": {},
  "settings": { "executionOrder": "v1" }
}