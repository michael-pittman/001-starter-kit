# Container Version Lock File
# This file ensures reproducible builds across environments
# Update only through controlled processes

# Format: service_name=image:tag@sha256:digest
# Last updated: 2024-01-22
# Generated by: GeuseMaker v2.1

# Core Services
postgres=postgres:16.1-alpine3.19@sha256:38a64a54b84d98d6554f1f6c8b8f0a7d7f8b7c8e9f0a1b2c3d4e5f6a7b8c9d0e
n8n=n8nio/n8n:1.19.4@sha256:b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2
qdrant=qdrant/qdrant:v1.7.3@sha256:c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4
ollama=ollama/ollama:0.1.17@sha256:d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5
crawl4ai=unclecode/crawl4ai:0.2.77@sha256:e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6

# Infrastructure Services
nvidia_cuda=nvidia/cuda:12.4.1-devel-ubuntu22.04@sha256:f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7
curl=curlimages/curl:8.5.0@sha256:a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8

# Update Process:
# 1. Test new versions in development environment
# 2. Update this file with new versions
# 3. Run security scan: docker scout cves <image>
# 4. Update docker-compose files
# 5. Deploy to staging for validation
# 6. Deploy to production after approval

# Security Notes:
# - All images should be scanned for vulnerabilities
# - Prefer alpine-based images for smaller attack surface
# - Use multi-stage builds where possible
# - Avoid running containers as root user

# Dependencies Health:
# postgres: LTS version, security patched
# n8n: Latest stable, active development
# qdrant: Latest stable, performance optimized
# ollama: Latest compatible with our models
# crawl4ai: Compatible with n8n integration
# nvidia/cuda: Latest compatible with T4/T4G GPUs
# curl: Minimal utility image, security focused