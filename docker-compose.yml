version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: postgres
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    image: n8nio/n8n:latest
    hostname: n8n-import
    container_name: n8n-import
    networks:
      - demo
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
      - /mnt/efs/n8n:/home/node/.n8n

  n8n:
    image: n8nio/n8n:latest
    hostname: n8n
    container_name: n8n
    networks:
      - demo
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5678:5678"
    volumes:
      - ./n8n/backup:/backup
      - /mnt/efs/n8n:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
      qdrant:
        condition: service_started
      ollama-init:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant:latest
    hostname: qdrant
    container_name: qdrant
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_storage:/root/.ollama

  ollama-init:
    image: ollama/ollama:latest
    container_name: ollama-init
    networks:
      - demo
    depends_on:
      - ollama
    entrypoint: /bin/sh
    environment:
      - OLLAMA_HOST=ollama:11434
    command:
      - "-c"
      - "sleep 3; ollama pull llama3.2 && ollama pull mxbai/embed-large"
    restart: on-failure

volumes:
  postgres_storage:
  qdrant_storage:
  ollama_storage:

networks:
  demo:
    driver: bridge
